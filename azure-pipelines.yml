# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
stages:
- stage: build
  jobs:
  
  - job: BuildJob
    pool:
      vmImage: 'windows-latest'

    steps:
    - bash: |
        curl -X POST "https://api.lifx.com/v1/lights/$(LifxId)/effects/breathe" \
        -H "Authorization: Bearer $(LifxToken)" \
        -H "content-type: application/json" \
        -d '{"color": "#ff9900","from_color": "#ffaa00","period": 4,"cycles": 100,"persist": false,"power_on": true}'
      displayName: Building Light

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: UseNode@1
      inputs:
        versionSpec: '10.x'
        
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'Deploy'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - bash: |
        curl -X PUT "https://api.lifx.com/v1/lights/$(LifxId)/state" \
        -H "Authorization: Bearer $(LifxToken)" \
        -H "content-type: application/json" \
        -d '{"color": "#00ff00","power": "on"}'
      condition: succeeded()
      displayName: Success Light

    - bash: |
        curl -X PUT "https://api.lifx.com/v1/lights/$(LifxId)/state" \
        -H "Authorization: Bearer $(LifxToken)" \
        -H "content-type: application/json" \
        -d '{"color": "#ff0000","power": "on"}'
      condition: failed()
      displayName: Failure Light